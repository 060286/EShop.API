// <auto-generated />
using System;
using EShop.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EShop.API.Migrations
{
    [DbContext(typeof(EShopDbContext))]
    partial class EShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EShop.API.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name");

                    b.HasIndex("Stock");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d576eb2-679d-4c5e-9486-1262ea5046cd"),
                            CategoryId = new Guid("f9d09c1f-f7be-4f7c-bf75-b4383934f786"),
                            CreatedAt = new DateTime(2023, 9, 1, 23, 50, 22, 833, DateTimeKind.Local).AddTicks(1173),
                            CreatedBy = "tam.levan",
                            Name = "Atlas: The Story of Pa Salt",
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("73496825-f34f-4c1a-8bbd-400cf212d442"),
                            CategoryId = new Guid("f9d09c1f-f7be-4f7c-bf75-b4383934f786"),
                            CreatedAt = new DateTime(2023, 9, 1, 23, 50, 22, 833, DateTimeKind.Local).AddTicks(1178),
                            CreatedBy = "tam.levan",
                            Name = "The Seven Sisters books in order: a complete guide",
                            Stock = 120
                        },
                        new
                        {
                            Id = new Guid("61d233f9-bcea-446f-8565-f67e4e330881"),
                            CategoryId = new Guid("e053fb4e-c731-4982-bc76-9523f60e73a2"),
                            CreatedAt = new DateTime(2023, 9, 1, 23, 50, 22, 833, DateTimeKind.Local).AddTicks(1181),
                            CreatedBy = "tam.levan",
                            Name = " The Sixth Extinction by Elizabeth Kolbert (2014)",
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("5bf20660-dbf9-41d7-9921-1f1ad11aa250"),
                            CategoryId = new Guid("e053fb4e-c731-4982-bc76-9523f60e73a2"),
                            CreatedAt = new DateTime(2023, 9, 1, 23, 50, 22, 833, DateTimeKind.Local).AddTicks(1184),
                            CreatedBy = "tam.levan",
                            Name = "The Year of Magical Thinking by Joan Didion (2005)",
                            Stock = 30
                        });
                });

            modelBuilder.Entity("EShop.API.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9d09c1f-f7be-4f7c-bf75-b4383934f786"),
                            CreatedAt = new DateTime(2023, 8, 30, 23, 50, 22, 833, DateTimeKind.Local).AddTicks(1136),
                            CreatedBy = "tam.levan",
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = new Guid("e053fb4e-c731-4982-bc76-9523f60e73a2"),
                            CreatedAt = new DateTime(2023, 8, 31, 23, 50, 22, 833, DateTimeKind.Local).AddTicks(1157),
                            CreatedBy = "tam.levan",
                            Name = "Non-Fiction"
                        });
                });

            modelBuilder.Entity("EShop.API.Entities.Product", b =>
                {
                    b.HasOne("EShop.API.Entities.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("EShop.API.Entities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
